# Documentação

Os cenários de teste estão no arquivo `cenariosTestes.txt`.

Os cenários de teste foram escritos em BDD com Gherkin, com o objetivo de facilitar o entendimento por qualquer pessoa, incluindo stakeholders, desenvolvedores, entre outros.

O foco principal é a funcionalidade de cupons no carrinho. Portanto, os testes foram concentrados nessa funcionalidade e nas integrações com outras partes do processo, como:

- Adicionar produtos ao carrinho
- Testar cupons com o cliente logado e deslogado
- Testar até a parte de checkout

## Automação

Foi escolhido o Cypress de ferramenta de automação. Tenho experiência em automatizar qualquer site com Cypress e também o utilizo para testes de back-end.

O objetivo dos testes automatizados é ser direto e objetivo. Ao invés de navegar no site para adicionar produtos ao carrinho e depois aplicar o cupom, prefiro realizar chamadas de APIs até chegar na parte do carrinho para fazer a aplicação dos cupons. Isso me permite ganhar tempo e reduzir o código, concentrando os testes no que realmente importa: a funcionalidade de cupons.

A automação foi dividida em três (Describe):

- Página do Carrinho
- Popup do Carrinho
- Testes validando o payload da API do cupom

Os testes foram escritos em Inglês, pois, dado que envolvem código, acredito que a padronização em inglês é essencial.

## Como rodar o código de automação

Siga o passo a passo abaixo para rodar a automação:

1. Utilize vscode.
2. Baixe e instale node.js https://nodejs.org/pt/blog/release/v20.15.1 (versão 20.15.1)
3. Faça o download do projeto que foi enviado no Email ou se preferir no github: https://github.com/brunogjvieira/loja_integrada_desafioqa. 
4. Abra o vscode no diretorio do projeto.
5. Execute no terminal do vscode `npm install`.
6. Execute no terminal do vscode `npx cypress open`.
7. Isso abrirá o Cypress. Clique em E2E Testing.
8. Selecione o navegador para realizar o teste (foi utilizado o Chrome).
9. Após isso, clique no único arquivo de teste chamado `CartPage.cy.js`.
10. Isso irá rodar todos os testes automatizados. Caso queira rodar um teste específico, adicione `.only` no `it` do teste.

# Agradecimentos

Agradeço pela oportunidade de participar do desafio. Tenho grande interesse em fazer parte da equipe. Quaisquer dúvidas, estou à disposição para esclarecimentos. Aguardo o feedback!
